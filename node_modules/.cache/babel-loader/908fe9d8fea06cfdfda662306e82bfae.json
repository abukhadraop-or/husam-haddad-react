{"ast":null,"code":"var _jsxFileName = \"/home/husam/movies/src/componenets/Card/Card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport DotButton from 'componenets/DotsButton/DotButton';\nimport HiddenMenu from 'componenets/HiddenMenu/HiddenMenu';\nimport UrlContext from 'componenets/store/url-context';\nimport get from 'componenets/service/http';\nimport { CardDiv, CardImage, CardInfo, CardContainer, Title, ReleasedDate, OverView } from 'componenets/Card/card.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card() {\n  _s();\n\n  let url = `https://api.themoviedb.org/3/movie/popular?api_key=3024cf700c94345aa84ec47dbf98f3a4&language=en-US&page=1`; // const [responseData, setResponseData] = useState([]);\n\n  const [isShown, setIsShown] = useState(false);\n  const sortedUrl = useContext(UrlContext);\n\n  const clickFun = () => {\n    setIsShown(!isShown);\n  };\n\n  if (sortedUrl.url !== '') {\n    url = sortedUrl.url;\n  }\n  /**\n   * Make get request.\n   *\n   * @param {string} url            Request URl.\n   * @param {Object} [headers=null] Object contains request headers.\n   *\n   * @return {Promise<Object>} Promise fulfilled with response data.\n   */\n\n\n  console.log(get(url)); // useEffect(() => {\n  //   fetch(url, {\n  //     dataType: 'json',\n  //     headers: { 'Content-Type': 'application/json' },\n  //     method: 'get',\n  //   })\n  //     .then((result) => result.json())\n  //     .then((result) => result.results)\n  //     .then((result) => {\n  //       setResponseData(result);\n  //       return responseData;\n  //     });\n  // }, [url]);\n\n  return /*#__PURE__*/_jsxDEV(CardContainer, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"bYkzsmWTsClSq/7x+efS1ay7t/0=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/husam/movies/src/componenets/Card/Card.jsx"],"names":["React","useContext","useEffect","useState","DotButton","HiddenMenu","UrlContext","get","CardDiv","CardImage","CardInfo","CardContainer","Title","ReleasedDate","OverView","Card","url","isShown","setIsShown","sortedUrl","clickFun","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AACA,SACEC,OADF,EAEEC,SAFF,EAGEC,QAHF,EAIEC,aAJF,EAKEC,KALF,EAMEC,YANF,EAOEC,QAPF,QAQO,8BARP;;;AAUA,SAASC,IAAT,GAAgB;AAAA;;AACd,MAAIC,GAAG,GAAI,2GAAX,CADc,CAEd;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMgB,SAAS,GAAGlB,UAAU,CAACK,UAAD,CAA5B;;AAEA,QAAMc,QAAQ,GAAG,MAAM;AACrBF,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAIA,MAAIE,SAAS,CAACH,GAAV,KAAkB,EAAtB,EAA0B;AACxBA,IAAAA,GAAG,GAAGG,SAAS,CAACH,GAAhB;AACD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;AACEK,EAAAA,OAAO,CAACC,GAAR,CAAYf,GAAG,CAACS,GAAD,CAAf,EArBc,CAuBd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAvDQD,I;;KAAAA,I;AAyDT,eAAeA,IAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport DotButton from 'componenets/DotsButton/DotButton';\nimport HiddenMenu from 'componenets/HiddenMenu/HiddenMenu';\nimport UrlContext from 'componenets/store/url-context';\nimport get from 'componenets/service/http';\nimport {\n  CardDiv,\n  CardImage,\n  CardInfo,\n  CardContainer,\n  Title,\n  ReleasedDate,\n  OverView,\n} from 'componenets/Card/card.styles';\n\nfunction Card() {\n  let url = `https://api.themoviedb.org/3/movie/popular?api_key=3024cf700c94345aa84ec47dbf98f3a4&language=en-US&page=1`;\n  // const [responseData, setResponseData] = useState([]);\n  const [isShown, setIsShown] = useState(false);\n  const sortedUrl = useContext(UrlContext);\n\n  const clickFun = () => {\n    setIsShown(!isShown);\n  };\n\n  if (sortedUrl.url !== '') {\n    url = sortedUrl.url;\n  }\n  /**\n   * Make get request.\n   *\n   * @param {string} url            Request URl.\n   * @param {Object} [headers=null] Object contains request headers.\n   *\n   * @return {Promise<Object>} Promise fulfilled with response data.\n   */\n  console.log(get(url));\n\n  // useEffect(() => {\n  //   fetch(url, {\n  //     dataType: 'json',\n  //     headers: { 'Content-Type': 'application/json' },\n  //     method: 'get',\n  //   })\n  //     .then((result) => result.json())\n  //     .then((result) => result.results)\n  //     .then((result) => {\n  //       setResponseData(result);\n  //       return responseData;\n  //     });\n  // }, [url]);\n\n  return (\n    <CardContainer>\n      {/* {responseData.map((item) => (\n        <CardDiv>\n          <CardImage\n            img={`https://image.tmdb.org/t/p/w500${item.poster_path}`}\n          />\n          <DotButton onClick={clickFun} />\n          <CardInfo>\n            <Title>{item.original_title}</Title>\n            <ReleasedDate>{item.release_date}</ReleasedDate>\n            <OverView>{item.overview}</OverView>\n          </CardInfo>\n          <HiddenMenu isClicked={isShown} />\n        </CardDiv>\n      ))} */}\n    </CardContainer>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}