{"ast":null,"code":"var _jsxFileName = \"/home/husam/movies/src/componenets/Card/Card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport UrlContext from \"../store/url-context\";\nimport { CardDiv, CardImage, CardInfo, CardContainer, Title, ReleasedDate, OverView } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = () => {\n  _s();\n\n  let url = `https://api.themoviedb.org/3/movie/popular?api_key=3024cf700c94345aa84ec47dbf98f3a4&language=en-US&page=1`;\n  const [responseData, setResponseData] = useState([]);\n  const sortedUrl = useContext(UrlContext);\n\n  if (sortedUrl.url !== \"\") {\n    url = sortedUrl.url;\n  }\n\n  useEffect(() => {\n    fetch(url, {\n      method: \"get\",\n      dataType: \"json\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(result => result.json()).then(result => result.results).then(result => {\n      setResponseData(result);\n      return `https://image.tmdb.org/t/p/w500/${result[0].backdrop_path}`;\n    });\n  }, [url]);\n  return /*#__PURE__*/_jsxDEV(CardContainer, {\n    children: responseData.map(item => /*#__PURE__*/_jsxDEV(CardDiv, {\n      children: [/*#__PURE__*/_jsxDEV(CardImage, {\n        img: `https://image.tmdb.org/t/p/w500${item.poster_path}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardInfo, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: item.original_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ReleasedDate, {\n          children: item.release_date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(OverView, {\n          children: item.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Card, \"snGNxbhm91Xig2Ns7ZUL6/7818E=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/husam/movies/src/componenets/Card/Card.jsx"],"names":["React","useContext","useEffect","useState","UrlContext","CardDiv","CardImage","CardInfo","CardContainer","Title","ReleasedDate","OverView","Card","url","responseData","setResponseData","sortedUrl","fetch","method","dataType","headers","then","result","json","results","backdrop_path","map","item","poster_path","original_title","release_date","overview"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SACEC,OADF,EAEEC,SAFF,EAGEC,QAHF,EAIEC,aAJF,EAKEC,KALF,EAMEC,YANF,EAOEC,QAPF,QAQO,UARP;;;AAUA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,MAAIC,GAAG,GAAI,2GAAX;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAMa,SAAS,GAAGf,UAAU,CAACG,UAAD,CAA5B;;AAEA,MAAIY,SAAS,CAACH,GAAV,KAAkB,EAAtB,EAA0B;AACxBA,IAAAA,GAAG,GAAGG,SAAS,CAACH,GAAhB;AACD;;AAEDX,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,KAAK,CAACJ,GAAD,EAAM;AACTK,MAAAA,MAAM,EAAE,KADC;AAETC,MAAAA,QAAQ,EAAE,MAFD;AAGTC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAHA,KAAN,CAAL,CAKGC,IALH,CAKSC,MAAD,IAAYA,MAAM,CAACC,IAAP,EALpB,EAMGF,IANH,CAMSC,MAAD,IAAYA,MAAM,CAACE,OAN3B,EAOGH,IAPH,CAOSC,MAAD,IAAY;AAChBP,MAAAA,eAAe,CAACO,MAAD,CAAf;AACA,aAAQ,mCAAkCA,MAAM,CAAC,CAAD,CAAN,CAAUG,aAAc,EAAlE;AACD,KAVH;AAWD,GAZQ,EAYN,CAACZ,GAAD,CAZM,CAAT;AAcA,sBACE,QAAC,aAAD;AAAA,cACGC,YAAY,CAACY,GAAb,CAAkBC,IAAD,iBAChB,QAAC,OAAD;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,GAAG,EAAG,kCAAiCA,IAAI,CAACC,WAAY;AAD1D;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,QAAD;AAAA,gCACE,QAAC,KAAD;AAAA,oBAAQD,IAAI,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AAAA,oBAAeF,IAAI,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,QAAD;AAAA,oBAAWH,IAAI,CAACI;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAvCD;;GAAMnB,I;;KAAAA,I;AAyCN,eAAeA,IAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport UrlContext from \"../store/url-context\";\nimport {\n  CardDiv,\n  CardImage,\n  CardInfo,\n  CardContainer,\n  Title,\n  ReleasedDate,\n  OverView,\n} from \"./styles\";\n\nconst Card = () => {\n  let url = `https://api.themoviedb.org/3/movie/popular?api_key=3024cf700c94345aa84ec47dbf98f3a4&language=en-US&page=1`;\n  const [responseData, setResponseData] = useState([]);\n  const sortedUrl = useContext(UrlContext);\n\n  if (sortedUrl.url !== \"\") {\n    url = sortedUrl.url;\n  }\n\n  useEffect(() => {\n    fetch(url, {\n      method: \"get\",\n      dataType: \"json\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((result) => result.json())\n      .then((result) => result.results)\n      .then((result) => {\n        setResponseData(result);\n        return `https://image.tmdb.org/t/p/w500/${result[0].backdrop_path}`;\n      });\n  }, [url]);\n\n  return (\n    <CardContainer>\n      {responseData.map((item) => (\n        <CardDiv>\n          <CardImage\n            img={`https://image.tmdb.org/t/p/w500${item.poster_path}`}\n          />\n          <CardInfo>\n            <Title>{item.original_title}</Title>\n            <ReleasedDate>{item.release_date}</ReleasedDate>\n            <OverView>{item.overview}</OverView>\n          </CardInfo>\n        </CardDiv>\n      ))}\n    </CardContainer>\n  );\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}