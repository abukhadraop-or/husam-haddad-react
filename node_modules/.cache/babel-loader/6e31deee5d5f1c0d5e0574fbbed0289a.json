{"ast":null,"code":"var _jsxFileName = \"/home/husam/movies/src/componenets/store/url-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UrlContext = /*#__PURE__*/React.createContext({\n  url: \"\",\n  sortUrl: () => {}\n});\nexport function UrlContextProvider(_ref) {\n  _s();\n\n  let {} = _ref;\n  const [url, setUrl] = useState(\"\");\n\n  const urlHandler = link => {\n    setUrl(link);\n  };\n\n  const contextValue = {\n    url: url,\n    sortUrl: urlHandler\n  };\n  return /*#__PURE__*/_jsxDEV(UrlContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UrlContextProvider, \"tyJwPUNTvQ8RPvFiUPpH5FS/SJw=\");\n\n_c = UrlContextProvider;\nexport default UrlContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"UrlContextProvider\");","map":{"version":3,"sources":["/home/husam/movies/src/componenets/store/url-context.js"],"names":["React","useState","UrlContext","createContext","url","sortUrl","UrlContextProvider","setUrl","urlHandler","link","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,UAAU,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACrCC,EAAAA,GAAG,EAAE,EADgC;AAErCC,EAAAA,OAAO,EAAE,MAAM,CAAE;AAFoB,CAApB,CAAnB;AAKA,OAAO,SAASC,kBAAT,OAAkC;AAAA;;AAAA,MAAN,EAAM;AACvC,QAAM,CAACF,GAAD,EAAMG,MAAN,IAAgBN,QAAQ,CAAC,EAAD,CAA9B;;AAEA,QAAMO,UAAU,GAAIC,IAAD,IAAU;AAC3BF,IAAAA,MAAM,CAACE,IAAD,CAAN;AACD,GAFD;;AAGA,QAAMC,YAAY,GAAG;AACnBN,IAAAA,GAAG,EAAEA,GADc;AAEnBC,IAAAA,OAAO,EAAEG;AAFU,GAArB;AAIA,sBACE,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAEE,YAA5B;AAAA,cAA2CC;AAA3C;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GAbeL,kB;;KAAAA,kB;AAehB,eAAeJ,UAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst UrlContext = React.createContext({\n  url: \"\",\n  sortUrl: () => {},\n});\n\nexport function UrlContextProvider({  }) {\n  const [url, setUrl] = useState(\"\");\n\n  const urlHandler = (link) => {\n    setUrl(link);\n  };\n  const contextValue = {\n    url: url,\n    sortUrl: urlHandler,\n  };\n  return (\n    <UrlContext.Provider value={contextValue}>{children}</UrlContext.Provider>\n  );\n}\n\nexport default UrlContext;\n"]},"metadata":{},"sourceType":"module"}