{"ast":null,"code":"var _jsxFileName = \"/home/husam/movies/src/componenets/UI/Button/Button.jsx\";\nimport React from \"react\";\nimport propTypes from \"prop-types\";\nimport ButtonDiv from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    Click,\n    disabled,\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(ButtonDiv, {\n    onClick: Click,\n    disabled: disabled,\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Button;\nButton.propTypes = {\n  Click: propTypes.bool.isRequired,\n  disabled: propTypes.bool.isRequired,\n  children: propTypes.R\n};\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/home/husam/movies/src/componenets/UI/Button/Button.jsx"],"names":["React","propTypes","ButtonDiv","Button","Click","disabled","children","bool","isRequired","R"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,UAAtB;;;AAEA,MAAMC,MAAM,GAAG;AAAA,MAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,GAAD;AAAA,sBACb,QAAC,SAAD;AAAW,IAAA,OAAO,EAAEF,KAApB;AAA2B,IAAA,QAAQ,EAAEC,QAArC;AAAA,2BACE;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADa;AAAA,CAAf;;KAAMH,M;AAMNA,MAAM,CAACF,SAAP,GAAmB;AACjBG,EAAAA,KAAK,EAAEH,SAAS,CAACM,IAAV,CAAeC,UADL;AAEjBH,EAAAA,QAAQ,EAAEJ,SAAS,CAACM,IAAV,CAAeC,UAFR;AAGjBF,EAAAA,QAAQ,EAACL,SAAS,CAACQ;AAHF,CAAnB;AAMA,eAAeN,MAAf","sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\nimport ButtonDiv from \"./styles\";\n\nconst Button = ({ Click, disabled, children }) => (\n  <ButtonDiv onClick={Click} disabled={disabled}>\n    <h2>{children}</h2>\n  </ButtonDiv>\n);\n\nButton.propTypes = {\n  Click: propTypes.bool.isRequired,\n  disabled: propTypes.bool.isRequired,\n  children:propTypes.R\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}